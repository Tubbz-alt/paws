from core.operations.slacxop import Operation

import time

class ReadTxt(Operation):
    """Read a txtfile header generated by beamline 1-5 at SSRL.

    All entries are returned as strings, transcribed from file without alteration."""

    def __init__(self):
        input_names = ['file']
        output_names = ['header']
        super(ReadTxt, self).__init__(input_names, output_names)
        self.input_doc['file'] = 'a text file header produced by beamline 1-5 at SSRL'
        self.output_doc['header'] = 'the header file as a python dictionary'

    def run(self):
        header = {}
        file = open(self.inputs['file'])
        file.readline()  # pass first, commented line
        line = file.readline()
        firstline_to_dict_entries(line, header)
        for i in range(3):
            line = file.readline()  # scroll forward to temp line
        header['temp_celsius'] = float(line[:-1])  # read temperature
        line = file.readline()
        while len(line) > 0:
            if not (line[0] == '#'):
                if len(line.strip()) > 0:
                    line_to_dict_entries(line, '=', header)
            line = file.readline()
        self.outputs['header'] = header


def firstline_to_dict_entries(line, dict):
    entries = line.split(',')
    for ii in entries:
        ii = ii.strip()
    dict['User'] = entries[0][6:]
    dict['time'] = entries[1][6:]
    #dict['time'] = time_from_text(entries[1][6:])

def time_from_text(text):
    #format = ''
    timetuple = time.strptime(text, format)
    timefloat = time.strftime(format, timetuple)
    return timefloat


def line_to_dict_entries(line, sep, dict):
    entries = line.split(',')
    for ii in entries:
        ii = ii.split(sep)
        key = ii[0].strip()
        value = float(ii[1].strip())
        #if int(value) == value:
        #    value = int(value)
        dict[key] = value


