from collections import OrderedDict
import copy

from paws import pawstools

from paws.workflows.Workflow import Workflow 
from paws.workflows.IO.BL15 import Read as Read2
from paws.operations.IO.BL15.ReadSpecHeader import ReadSpecHeader 

# NOTE: this workflow is for reading samples
# that were saved with text headers generated by SPEC 

inputs = copy.deepcopy(Read2.inputs) 
outputs = copy.deepcopy(Read2.outputs) 

class Read(Workflow):

    def __init__(self):
        super(Read,self).__init__(inputs,outputs)
        self.read_wf = Read2.Read()
        # swap out the header reader
        self.read_wf.add_operation('read_header',ReadSpecHeader())

    def run(self):
        self.read_wf.ops_enabled.update(self.ops_enabled) 
        self.outputs = self.read_wf.run_with(**self.inputs)
        return self.outputs

